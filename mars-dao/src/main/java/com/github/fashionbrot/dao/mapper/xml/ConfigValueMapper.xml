<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.github.fashionbrot.dao.mapper.ConfigValueMapper">


    <resultMap type="com.github.fashionbrot.dao.entity.ConfigValueEntity" id="configValueMap">
            <result property="id" column="id"/>
            <result property="status" column="status"/>
            <result property="templateKey" column="template_key"/>
            <result property="description" column="description"/>
            <result property="priority" column="priority"/>
            <result property="envCode" column="env_code"/>
            <result property="appName" column="app_name"/>
            <result property="userName" column="user_name"/>
            <result property="createId" column="create_id"/>
            <result property="createDate" column="create_date"/>
            <result property="updateDate" column="update_date"/>
            <result property="json" column="json"/>
    </resultMap>


    <sql id="allSql">
        id,status,template_key,description,priority,env_code,app_name,user_name
    </sql>



    <select id="configValueList" resultMap="configValueMap" parameterType="com.github.fashionbrot.common.req.ConfigValueReq">
        select
        a.update_date,a.create_date,
        a.id,a.status,a.template_key,a.description,a.priority,a.env_code,a.app_name,a.user_name,a.release_status
        from config_value a
        where 1=1

        <if test="envCode!=null and envCode!='-1'">
            and a.env_code = #{envCode}
        </if>
        <if test="appName!=null and appName!='-1'">
            and a.app_name=#{appName}
        </if>
        <if test="templateKey!=null and templateKey!=''">
            and a.template_key =#{templateKey}
        </if>
        <if test="description!=null and description!=''">
            and a.description  LIKE concat('%',#{description},'%')
        </if>
        order by a.priority desc
    </select>




    <resultMap type="com.github.fashionbrot.common.vo.ConfigValueVo" id="jsonMap">
        <result property="templateKey" column="template_key"/>
        <collection property="jsonList" ofType="com.github.fashionbrot.common.vo.JsonVo">
            <result property="json" column="json"/>
        </collection>
    </resultMap>

    <select id="selectByJson" parameterType="java.util.Map" resultMap="jsonMap">
        select
        template_key,
        json
        from config_value a
        where 1=1
        <if test="envCode!=null and envCode!='-1'">
            and a.env_code = #{envCode}
        </if>
        <if test="appName!=null and appName!='-1'">
            and a.app_name=#{appName}
        </if>
        <if test="status!=null">
            and a.status=#{status}
        </if>

        <if test="templateKeyList != null and templateKeyList.size()>0">
            and a.template_key in
            <foreach collection="templateKeyList" item="key" open="(" close=")" separator=",">
                #{key}
            </foreach>
        </if>
        order by template_key,a.priority desc
    </select>


    <update id="updateRelease" parameterType="com.github.fashionbrot.dao.dto.ConfigValueDto">
        update config_value set json=temp_json , release_status=#{updateReleaseStatus},temp_json=null where env_code=#{envCode} and app_name=#{appName}
        <if test="whereReleaseStatus != null and whereReleaseStatus.size()>0">
            and release_status in
            <foreach collection="whereReleaseStatus" item="key" open="(" close=")" separator=",">
                #{key}
            </foreach>
        </if>
    </update>

</mapper>