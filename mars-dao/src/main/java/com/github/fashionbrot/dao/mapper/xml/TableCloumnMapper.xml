<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.github.fashionbrot.dao.mapper.TableColumnMapper">


    <resultMap type="com.github.fashionbrot.dao.entity.TableColumnEntity" id="propertyMap">
            <result property="id" column="id"/>
            <result property="columnName" column="column_name"/>
            <result property="dataType" column="data_type"/>
            <result property="columnType" column="column_type"/>
            <result property="columnComment" column="column_comment"/>
            <result property="columnKey" column="column_key"/>
            <result property="extra" column="extra"/>
            <result property="ordinalPosition" column="ordinal_position"/>
    </resultMap>


    <sql id="allSql">
        `column_name` , data_type,column_type , column_comment , column_key , extra ,ordinal_position
    </sql>




    <update id="addTable"  >
        CREATE TABLE ${tableName} (
        `id` bigint(11) unsigned NOT NULL AUTO_INCREMENT ,
        `config_id` bigint(11) unsigned NOT NULL  ,
        PRIMARY KEY (`id`),
          KEY `config_id` (`config_id`) USING BTREE
        ) ENGINE=InnoDB  DEFAULT CHARSET=utf8mb4;
    </update>

    
    <update id="dropTable" >
        DROP TABLE IF EXISTS ${tableName}
    </update>

    <update id="addTableColumn" parameterType="com.github.fashionbrot.dao.entity.PropertyEntity">
        <if test="propertyType=='date' or propertyType=='year' or propertyType=='time' or propertyType=='datetime' or propertyType=='text' ">
            alter table ${templateKey} add ${propertyKey}  ${propertyType} default null ;
        </if>
        <if test="propertyType=='decimal' or  propertyType=='double'">
            alter table ${templateKey} add ${propertyKey} ${propertyType}(11,2) ;
        </if>
        <if test="propertyType=='varchar'  or propertyType=='int' or propertyType=='bigint' or propertyType=='tinyint'  ">
            alter table ${templateKey} add ${propertyKey} ${propertyType}(${columnLength}) ;
        </if>

    </update>

    <update id="dropTableColumn" parameterType="com.github.fashionbrot.dao.entity.PropertyEntity">
        ALTER TABLE ${templateKey} drop COLUMN ${propertyKey};
    </update>

    <update id="updateTableColumn" parameterType="com.github.fashionbrot.dao.entity.PropertyEntity">
        <if test="propertyType=='date' or propertyType=='year' or propertyType=='time' or propertyType=='datetime' or propertyType=='text' ">
            alter table ${templateKey} modify ${propertyKey} ${propertyType} default null ;
        </if>
        <if test="propertyType=='decimal' or  propertyType=='double'">
            alter table ${templateKey} modify ${propertyKey} ${propertyType}(11,2) ;
        </if>
        <if test="propertyType=='varchar'  or propertyType=='int' or propertyType=='bigint' or propertyType=='tinyint'  ">
            alter table ${templateKey} modify ${propertyKey} ${propertyType}(${columnLength}) ;
        </if>
    </update>


    <insert id="insertTable">
        ${sql}
    </insert>

    <update id="updateTable">
        ${sql}
    </update>

    <select id="selectTable" resultType="java.util.Map" parameterType="com.github.fashionbrot.dao.entity.ConfigValueEntity" >
        select * from ${tableName} where config_id =#{id}
    </select>

</mapper>